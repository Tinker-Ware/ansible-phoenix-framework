---
- name: Prod | configure Add provided production config file
  copy:
    src={{ inventory_dir }}/host_files/{{ inventory_hostname }}/{{ item.value.prod_file }}
    dest="{{ git_clone_path }}/{{ item.value.name | basename }}/config/prod.exs"
    owner="{{ phoenix_user }}"
    group="{{ phoenix_group }}"
    mode=644
  when: item.value.prod_file is defined
  with_dict: "phoenix_repos"
  sudo: yes
  tags:
    - update_phoenix_repo

- include_vars: "{{ inventory_dir }}/host_files/{{ inventory_hostname }}/{{ item.value.prod_secret_file }}"
  when: private_key
  with_dict: "phoenix_repos"
  tags:
    - update_phoenix_repo

- name: Prod | Add provided production secret file
  copy:
    content="{{ hostvars[inventory_hostname][item.key + '_production_file'] }}"
    dest="{{ git_clone_path }}/{{ item.value.name | basename }}/config/prod.secret.exs"
    owner="{{ phoenix_user }}"
    group="{{ phoenix_group }}"
    mode=644
  when: item.value.prod_secret_file is defined
  with_dict: "phoenix_repos"
  sudo: yes
  tags:
    - update_phoenix_repo

- name: Prod | Get dependencies in repository
  command: "mix deps.get --only prod"
  args:
    chdir: "{{ git_clone_path }}/{{ item.value.name | basename }}"
  with_dict: "phoenix_repos"
  sudo: yes
  sudo_user: "{{ phoenix_user }}"
  tags:
    - update_phoenix_repo

- name: Prod | Compile with dependencies
  shell: "mix local.rebar --force && mix compile"
  args:
    chdir: "{{ git_clone_path }}/{{ item.value.name | basename }}"
  environment:
    MIX_ENV: prod
  with_dict: "phoenix_repos"
  sudo: yes
  sudo_user: "{{ phoenix_user }}"
  tags:
    - update_phoenix_repo

- name: Prod | Migrate DB schema if necessary
  shell: "mix ecto.migrate"
  args:
    chdir: "{{ git_clone_path }}/{{ item.value.name | basename }}"
  environment:
    MIX_ENV: prod
  with_dict: "phoenix_repos"
  sudo: yes
  sudo_user: "{{ phoenix_user }}"
  when: item.value.migrate

- name: Prod | Kill existing elixir services
  shell: "ps aux | grep phoenix | grep -v grep | awk '{printf(\"%s \"), $2}' | xargs kill -9"
  sudo: yes
  sudo_user: "{{ server_user }}"
  tags:
    - update_services
    - update_phoenix_repo

- name: Prod | Run phoenix service
  shell: "nohup mix phoenix.server >> /tmp/phoenix_server_{{ item.key }}.log 2>&1&"
  args:
    chdir: "{{ git_clone_path }}/{{ item.value.name | basename }}"
  environment:
    PORT: "{{ item.value.port }}"
    MIX_ENV: prod
  with_dict: "phoenix_repos"
  sudo: yes
  sudo_user: "{{ phoenix_user }}"
  tags:
    - update_services
    - update_phoenix_repo
